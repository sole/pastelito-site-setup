{{#if with_http_to_https_redirect}}
## redirect http to https ##
server {
	listen {{http_port}};
	server_name {{server_name}};
	rewrite ^ https://$server_name$request_uri? permanent;
}

{{/if}}
server {
	listen {{port}};
	server_name {{server_name}};
	access_log {{site_path}}/logs/access.log;
	error_log {{site_path}}/logs/error.log;
	root {{site_path}}/public_html;

	{{#if with_ssl}}
	ssl on;
	ssl_certificate {{ssl_certificate}};
	ssl_certificate_key {{ssl_certificate_key}};
	ssl_session_timeout 5m;
	ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
	# Avoid weak Diffie-Hellman key exchange & Logjam attacks
	# openssl dhparam -out /path/to/dhparams.pem 2048
	ssl_dhparam {{site_path}}/dhparams.pem;
	ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
	ssl_session_cache shared:SSL:10m;
	# ssl_session_tickets off; # Requires nginx >= 1.5.9
	ssl_stapling on; # Requires nginx >= 1.3.7
	ssl_stapling_verify on; # Requires nginx => 1.3.7
	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;

	{{#if with_lets_encrypt}}
	ssl_trusted_certificate {{ssl_trusted_certificate}};
	{{/if}}
	{{/if}}

	{{#if with_www_redirect}}
	# enforce NO www
	if ($host ~* ^www\.(.*))
	{
		set $host_without_www $1;
		rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
	}
	{{/if}}

	{{#if with_php}}
	location ~ \.php$ {
		try_files $uri /404.htm;
		include /etc/nginx/fastcgi_params;
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	}
	{{/if}}

	location / {
	{{#if with_wordpress}}
		index index.html index.htm index.php;

		# if the requested file exists, return it immediately
		if (-f $request_filename) {
			break;
		}

		# Send requests to WordPress
		if (!-e $request_filename) {
			rewrite . /index.php last;
		}

	{{else}}
		{{#if with_php}}
		index index.html index.htm index.php;
		try_files $uri $uri/ /index.php?$args;
		{{else}}
		index index.html index.htm;
		try_files $uri $uri/ =404;
		{{/if}}
	{{/if}}

	{{#if with_static_caching}}
		# Static caching
		location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
			expires max;
			add_header Pragma public;
			add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		}
	{{/if}}

	}
}
